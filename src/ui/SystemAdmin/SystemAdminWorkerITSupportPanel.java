/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdmin;

import business.DB4OUtil.DB4OUtil;
import business.Organization.Organization;
import business.Organization.OrganizationDirectory;
import business.Employee.Employee;
import business.EmployeeManagement;
import business.Organization.SupportOrganization;
import business.Role.Role;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saamu
 */
@SuppressWarnings("unchecked")
public class SystemAdminWorkerITSupportPanel extends javax.swing.JPanel {

    /**
     * Creates new form MentalHealthWorkerjPanel
     */
    private EmployeeManagement system;
    private OrganizationDirectory directory;
    private JPanel container,logincontainerJPanel;
    private UserAccount user;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    public SystemAdminWorkerITSupportPanel(JPanel logincontainerJPanel,JPanel container,OrganizationDirectory directory, UserAccount user, EmployeeManagement system) {
        initComponents();
        this.system=system;
        this.container=container;
        this.logincontainerJPanel=logincontainerJPanel;
        this.directory=directory;
        this.user=user;
        this.loggedmhwjLabel.setText("Hi, "+user.getEmployee());
        
        employeeNamejTextField.setText("");
        newEnterprisejButton.setVisible(false);
        updateEnterprisejButton.setVisible(false);
        deleteEnterprisejButton.setVisible(false);
        saveEnterprisejButton.setVisible(true);
        fillOrganizationComboBox();
        DisplayEnterpisesAdmins();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loggedmhwjLabel = new javax.swing.JLabel();
        networknamejLabel = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        employeeNamejTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        organizationjComboBox = new javax.swing.JComboBox();
        adminusernamejTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        adminpasswordjPasswordField = new javax.swing.JPasswordField();
        saveEnterprisejButton = new javax.swing.JButton();
        newEnterprisejButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        deleteEnterprisejButton = new javax.swing.JButton();
        updateEnterprisejButton = new javax.swing.JButton();
        rolejComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterprisessjTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(237, 226, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        loggedmhwjLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loggedmhwjLabel.setText("Logged Username");
        loggedmhwjLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        networknamejLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        networknamejLabel.setText("Manage IT Support Users");
        networknamejLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jButton4.setBackground(new java.awt.Color(175, 180, 209));
        jButton4.setText("<< Back");
        jButton4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(117, 117, 117))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Assign / Update Users to Employee", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Employee Name");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Organization");

        organizationjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organizationjComboBoxActionPerformed(evt);
            }
        });

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Username");

        saveEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        saveEnterprisejButton.setText("Save");
        saveEnterprisejButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        saveEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEnterprisejButtonActionPerformed(evt);
            }
        });

        newEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        newEnterprisejButton.setText("New");
        newEnterprisejButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        newEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEnterprisejButtonActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Password");

        deleteEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        deleteEnterprisejButton.setText("Delete");
        deleteEnterprisejButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        deleteEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEnterprisejButtonActionPerformed(evt);
            }
        });

        updateEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        updateEnterprisejButton.setText("Update");
        updateEnterprisejButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        updateEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEnterprisejButtonActionPerformed(evt);
            }
        });

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Role");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(organizationjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminusernamejTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(adminpasswordjPasswordField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(updateEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(saveEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(employeeNamejTextField)
                            .addComponent(rolejComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(organizationjComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminusernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adminpasswordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(237, 226, 242));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Organization Users", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        enterprisessjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "Role", "Employee"
            }
        ));
        enterprisessjTable.setGridColor(java.awt.SystemColor.window);
        enterprisessjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterprisessjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(enterprisessjTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void organizationjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organizationjComboBoxActionPerformed
        Organization dept = (Organization)organizationjComboBox.getSelectedItem();
        if (dept != null){
            fillRolesComboBox(dept);
        }
    }//GEN-LAST:event_organizationjComboBoxActionPerformed

    private void saveEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEnterprisejButtonActionPerformed
        String username = this.adminusernamejTextField.getText();
        String password = String.valueOf(this.adminpasswordjPasswordField.getPassword());
        String employeeName = employeeNamejTextField.getText();
        
        Role role = (Role) rolejComboBox.getSelectedItem();
        
        if(employeeName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Employee is Required", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(employeeName.length()<=5) {
            JOptionPane.showMessageDialog(this, "Employee should be more than five characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(employeeName.length()>120) {
            JOptionPane.showMessageDialog(this, "Employee should be less than 120 characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill Admin Username", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()<=4) {
            JOptionPane.showMessageDialog(this, "Username Should be more than five characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()>120) {
            JOptionPane.showMessageDialog(this, "Username should be less than 120", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Specify Password", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()<=7) {
            JOptionPane.showMessageDialog(this, "Password should be more than Seven Characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()>120) {
            JOptionPane.showMessageDialog(this, "Password should be less tham 120 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Employee employee = system.getEmployeeDirectory().createEmployee(employeeName);

        boolean unique=system.checkIfUserIsUnique(username);
        Organization inOrganization=null;

        if(unique){
            //Step 2: Go inside each network and check each enterprise
            for(Organization organizations:system.getOrganizationDirectory().getOrganizationList()){
                unique=organizations.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                if(!unique){
                    inOrganization=organizations;
                    break;
                }
            }
        }

        if(!unique){
            JOptionPane.showMessageDialog(this, "Username Already Used", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        Organization organization = (Organization) organizationjComboBox.getSelectedItem();
        UserAccount entadminuser = organization.getUserAccountDirectory().createUser(username, password, employee, role);
        JOptionPane.showMessageDialog(null, "Organization User Added");
        dB4OUtil.storeSystem(system);
        DisplayEnterpisesAdmins();
    }//GEN-LAST:event_saveEnterprisejButtonActionPerformed

    private void newEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEnterprisejButtonActionPerformed
        employeeNamejTextField.setText("");
        adminusernamejTextField.setText("");
        adminpasswordjPasswordField.setText("");
        newEnterprisejButton.setVisible(false);
        updateEnterprisejButton.setVisible(false);
        deleteEnterprisejButton.setVisible(false);
        saveEnterprisejButton.setVisible(true);
    }//GEN-LAST:event_newEnterprisejButtonActionPerformed

    private void deleteEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEnterprisejButtonActionPerformed
        int selectedRow = enterprisessjTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Organization User Must be Choosen.");
            employeeNamejTextField.setText("");
            adminusernamejTextField.setText("");
            newEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            return;
        }
        Organization organization = (Organization) organizationjComboBox.getSelectedItem();
        UserAccount adminuser = (UserAccount)enterprisessjTable.getValueAt(selectedRow, 0);
        Employee employee =adminuser.getEmployee();
        system.getEmployeeDirectory().getEmployeeList().remove(employee);
        organization.getUserAccountDirectory().getUserAccountList().remove(adminuser);
        JOptionPane.showMessageDialog(null, "User Deleted");
        dB4OUtil.storeSystem(system);
        DisplayEnterpisesAdmins();
    }//GEN-LAST:event_deleteEnterprisejButtonActionPerformed

    private void updateEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEnterprisejButtonActionPerformed
        int selectedRow = enterprisessjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No Enterprise Admin Selected");
            employeeNamejTextField.setText("");
            employeeNamejTextField.setText("");
            adminpasswordjPasswordField.setText("");
            newEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            return;
        }
        
        String username = this.adminusernamejTextField.getText();
        String password = String.valueOf(this.adminpasswordjPasswordField.getPassword());
        String fullname = employeeNamejTextField.getText();

        Role role = (Role) rolejComboBox.getSelectedItem();
        
        if(fullname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Fill Employee", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(fullname.length()<=5) {
            JOptionPane.showMessageDialog(this, "Employee should be more than five characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(fullname.length()>120) {
            JOptionPane.showMessageDialog(this, "Employee should be less than 120 characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Fill Admin Username", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()<=4) {
            JOptionPane.showMessageDialog(this, "Username Should be more than five characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()>120) {
            JOptionPane.showMessageDialog(this, "Username should be less than 120", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(password.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Please Specify Password", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()<=7) {
            JOptionPane.showMessageDialog(this, "Password should be more than Seven Characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()>120) {
            JOptionPane.showMessageDialog(this, "Password should be less tham 120 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean unique=system.checkIfUserIsUnique(username);
        Organization inOrganization=null;
        
        
        
        if(unique){
            //Step 2: Go inside each network and check each enterprise
            for(Organization organizations:system.getOrganizationDirectory().getOrganizationList()){
                unique=organizations.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                if(!unique){
                    inOrganization=organizations;
                    break;
                }
            }
        }
        
        UserAccount adminuser = (UserAccount)enterprisessjTable.getValueAt(selectedRow, 0);
        if(!unique && !adminuser.getUsername().equalsIgnoreCase(username)){
            JOptionPane.showMessageDialog(this, "Username Exists", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        adminuser.setUsername(username);
        adminuser.setPassword(password);
        adminuser.getEmployee().setName(fullname);
        adminuser.setRole(role);
        JOptionPane.showMessageDialog(null, "User Updated Successfully");
        dB4OUtil.storeSystem(system);
        DisplayEnterpisesAdmins();
    }//GEN-LAST:event_updateEnterprisejButtonActionPerformed

    private void enterprisessjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterprisessjTableMouseClicked
        int selectedRow = enterprisessjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No User Selected");
            employeeNamejTextField.setText("");
            adminpasswordjPasswordField.setText("");
            adminusernamejTextField.setText("");
            rolejComboBox.setSelectedIndex(0);
            organizationjComboBox.setSelectedIndex(0);
            newEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            saveEnterprisejButton.setVisible(true);
            return;
        }

        UserAccount selUser = (UserAccount)enterprisessjTable.getValueAt(selectedRow, 0);
        this.adminusernamejTextField.setText(selUser.getUsername());
        this.adminpasswordjPasswordField.setText(selUser.getPassword());

        this.employeeNamejTextField.setText(selUser.getEmployee().getName());
        this.rolejComboBox.setSelectedItem(selUser.getRole());
        organizationjComboBox.setSelectedIndex(0);
        newEnterprisejButton.setVisible(true);
        updateEnterprisejButton.setVisible(true);
        deleteEnterprisejButton.setVisible(true);
        saveEnterprisejButton.setVisible(false);
    }//GEN-LAST:event_enterprisessjTableMouseClicked
    
    public void fillOrganizationComboBox(){
        organizationjComboBox.removeAllItems();
        
        for (Organization organization : directory.getOrganizationList()){
            if(organization instanceof SupportOrganization){
                organizationjComboBox.addItem(organization);
            }
        }
    }
    
    private void fillRolesComboBox(Organization organization){
        this.rolejComboBox.removeAllItems();
        for (Role role : organization.getSupportedRole()){
            rolejComboBox.addItem(role);
        }
    }
    
    private void DisplayEnterpisesAdmins() {
        DefaultTableModel model = (DefaultTableModel) enterprisessjTable.getModel();
        
        model.setRowCount(0);
        Organization organization = (Organization)organizationjComboBox.getSelectedItem();
        if (organization != null){
            for (UserAccount users : organization.getUserAccountDirectory().getUserAccountList()) {
                Object[] row = new Object[4];
                row[0] = users;
                row[1] = users.getRole();
                row[2] = users.getEmployee();
                model.addRow(row);
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField adminpasswordjPasswordField;
    private javax.swing.JTextField adminusernamejTextField;
    private javax.swing.JButton deleteEnterprisejButton;
    private javax.swing.JTextField employeeNamejTextField;
    private javax.swing.JTable enterprisessjTable;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel loggedmhwjLabel;
    private javax.swing.JLabel networknamejLabel;
    private javax.swing.JButton newEnterprisejButton;
    private javax.swing.JComboBox organizationjComboBox;
    private javax.swing.JComboBox rolejComboBox;
    private javax.swing.JButton saveEnterprisejButton;
    private javax.swing.JButton updateEnterprisejButton;
    // End of variables declaration//GEN-END:variables
}
