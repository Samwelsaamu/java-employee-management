/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.TalentAndAcquisitionHR;

import business.DB4OUtil.DB4OUtil;
import business.Organization.Organization;
import business.Organization.OrganizationDirectory;
import business.Employee.Employee;
import business.EmployeeManagement;
import business.Role.EmployeeLogin;
import business.Role.ProjectManagerLogin;
import business.Role.Role;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.time.LocalDate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saamu
 */
@SuppressWarnings("unchecked")
public class TalentAcquistionWorkerEmployeePanel extends javax.swing.JPanel {

    /**
     * Creates new form MentalHealthWorkerjPanel
     */
    private EmployeeManagement system;
    private OrganizationDirectory directory;
    private JPanel container,logincontainerJPanel;
    private UserAccount user;
    private DB4OUtil dB4OModel = DB4OUtil.getInstance();
    private DefaultComboBoxModel days=new DefaultComboBoxModel();
    public TalentAcquistionWorkerEmployeePanel(JPanel logincontainerJPanel,JPanel container,OrganizationDirectory directory, UserAccount user, EmployeeManagement system) {
        initComponents();
        this.system=system;
        this.container=container;
        this.logincontainerJPanel=logincontainerJPanel;
        this.directory=directory;
        this.user=user;
        this.loggedmhwjLabel.setText("Welcome, "+user.getEmployee());
        
        newEnterprisejButton.setVisible(false);
        updateEnterprisejButton.setVisible(false);
        deleteEnterprisejButton.setVisible(false);
        saveEnterprisejButton.setVisible(true);
        displayOrganizationUserAccount();
        PopRolesComboBox();
        
        yearjComboBox.removeAll();
        LocalDate nowDate=LocalDate.now();
        int year=nowDate.getYear();
        int startYear=1940;
        
        for(int i=year;i>=startYear;i--){
            yearjComboBox.addItem(String.valueOf(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loggedmhwjLabel = new javax.swing.JLabel();
        networknamejLabel = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterprisessjTable = new javax.swing.JTable();
        newUserjPanel = new javax.swing.JPanel();
        jLabel41 = new javax.swing.JLabel();
        firstnamejTextField = new javax.swing.JTextField();
        lastnamejTextField = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        addressjTextField = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        cityjTextField = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        statejTextField = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        zipcodejTextField = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        phonejTextField = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        emailIdjTextField = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        ssnnumberjTextField = new javax.swing.JTextField();
        sexjComboBox = new javax.swing.JComboBox<>();
        yearjComboBox = new javax.swing.JComboBox<>();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        usernamejTextField = new javax.swing.JTextField();
        passwordjPasswordField = new javax.swing.JPasswordField();
        rolejComboBox = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        updateEnterprisejButton = new javax.swing.JButton();
        deleteEnterprisejButton = new javax.swing.JButton();
        newEnterprisejButton = new javax.swing.JButton();
        saveEnterprisejButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        employeeidjTextField = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        employeeNamejTextField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(237, 226, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        loggedmhwjLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loggedmhwjLabel.setText("Logged Username");
        loggedmhwjLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        networknamejLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        networknamejLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        networknamejLabel.setText("Logged Network");
        networknamejLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jButton4.setBackground(new java.awt.Color(175, 180, 209));
        jButton4.setText("<< Back");
        jButton4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(117, 117, 117))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 255));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Department Users", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        enterprisessjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "User", "Role", "Employee"
            }
        ));
        enterprisessjTable.setGridColor(java.awt.SystemColor.window);
        enterprisessjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                enterprisessjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(enterprisessjTable);

        newUserjPanel.setBackground(new java.awt.Color(204, 204, 255));
        newUserjPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create New / Update Employee User", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        newUserjPanel.setAutoscrolls(true);

        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel41.setText("First Name");

        jLabel43.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel43.setText("Date of Birth");

        jLabel44.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel44.setText("Sex");

        jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel45.setText("Address/Zip Code");

        jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel46.setText("City/State");

        jLabel47.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel47.setText("/");

        jLabel48.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel48.setText("/");

        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel49.setText("Phone Number");

        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel50.setText("Email ID");

        jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel51.setText("SSN No");

        sexjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Both", "Other" }));

        jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel57.setText("Username");

        jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel58.setText("Password");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Role");

        updateEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        updateEnterprisejButton.setText("Update");
        updateEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        updateEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEnterprisejButtonActionPerformed(evt);
            }
        });

        deleteEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        deleteEnterprisejButton.setText("Delete");
        deleteEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        deleteEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteEnterprisejButtonActionPerformed(evt);
            }
        });

        newEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        newEnterprisejButton.setText("New");
        newEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        newEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEnterprisejButtonActionPerformed(evt);
            }
        });

        saveEnterprisejButton.setBackground(new java.awt.Color(175, 180, 209));
        saveEnterprisejButton.setText("Save");
        saveEnterprisejButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        saveEnterprisejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEnterprisejButtonActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Employee ID");

        jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel59.setText("Last");

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Employee Name");

        javax.swing.GroupLayout newUserjPanelLayout = new javax.swing.GroupLayout(newUserjPanel);
        newUserjPanel.setLayout(newUserjPanelLayout);
        newUserjPanelLayout.setHorizontalGroup(
            newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserjPanelLayout.createSequentialGroup()
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(employeeNamejTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(updateEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                        .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(phonejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(emailIdjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(passwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(yearjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addComponent(firstnamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                                    .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sexjComboBox, 0, 150, Short.MAX_VALUE)
                                    .addComponent(lastnamejTextField)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(11, 11, 11)
                                        .addComponent(addressjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(9, 9, 9)
                                        .addComponent(cityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(statejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                    .addComponent(zipcodejTextField)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newUserjPanelLayout.createSequentialGroup()
                                        .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ssnnumberjTextField)
                                            .addComponent(employeeidjTextField))))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(65, 65, 65))
        );
        newUserjPanelLayout.setVerticalGroup(
            newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newUserjPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rolejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ssnnumberjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeidjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(firstnamejTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(lastnamejTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                    .addComponent(jLabel59, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sexjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zipcodejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phonejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailIdjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(usernamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordjPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newUserjPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(newEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newUserjPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(deleteEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateEnterprisejButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newUserjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 623, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(newUserjPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void enterprisessjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_enterprisessjTableMouseClicked
        int selectedRow = enterprisessjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "No User Selected");
            this.usernamejTextField.setText("");
            passwordjPasswordField.setText("");
            this.firstnamejTextField.setText("");
            sexjComboBox.setSelectedIndex(0);
            this.emailIdjTextField.setText("");
            this.phonejTextField.setText("");
            this.addressjTextField.setText("");
            cityjTextField.setText("");
            this.zipcodejTextField.setText("");
            this.statejTextField.setText("");
            this.ssnnumberjTextField.setText("");
            this.employeeidjTextField.setText("");
            this.rolejComboBox.setSelectedIndex(0);
            this.employeeNamejTextField.setText("");
            this.newEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            saveEnterprisejButton.setVisible(true);
            return;
        }
        
        UserAccount selUser = (UserAccount)enterprisessjTable.getValueAt(selectedRow, 0);
        this.usernamejTextField.setText(selUser.getUsername());
        passwordjPasswordField.setText(selUser.getPassword());
        this.firstnamejTextField.setText(selUser.getFirstname());
        this.lastnamejTextField.setText(selUser.getLastname());
        sexjComboBox.setSelectedItem(selUser.getSex());
        this.emailIdjTextField.setText(selUser.getEMailId());
        this.phonejTextField.setText(String.valueOf(selUser.getPhone()));
        this.addressjTextField.setText(selUser.getAddress());
        cityjTextField.setText(selUser.getCity());
        this.zipcodejTextField.setText(String.valueOf(selUser.getZipcode()));
        this.statejTextField.setText(selUser.getState());
        this.ssnnumberjTextField.setText(String.valueOf(selUser.getSsnno()));
        this.employeeidjTextField.setText(selUser.getEmployeeid());
        
        this.rolejComboBox.setSelectedItem(selUser.getRole());
        this.employeeNamejTextField.setText(selUser.getEmployee().getName());
        newEnterprisejButton.setVisible(true);
        updateEnterprisejButton.setVisible(true);
        deleteEnterprisejButton.setVisible(true);
        saveEnterprisejButton.setVisible(false);
    }//GEN-LAST:event_enterprisessjTableMouseClicked

    private void saveEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEnterprisejButtonActionPerformed
        //Submit Details
        String yy=String.valueOf(this.yearjComboBox.getSelectedItem());
        String dob=yy+"-12-31";
        String employeeName=this.employeeNamejTextField.getText();
        String username = this.usernamejTextField.getText().trim();
        char[] passwordRaw = this.passwordjPasswordField.getPassword();
        String password = String.valueOf(passwordRaw);
        String firstname = firstnamejTextField.getText().trim();
        String lastname = lastnamejTextField.getText().trim();
        String sex = sexjComboBox.getSelectedItem().toString().trim();
        String mailid = this.emailIdjTextField.getText().trim();
        String phone = this.phonejTextField.getText().trim();
        String address = this.addressjTextField.getText().trim();
        String city = this.cityjTextField.getText().trim();
        String state = this.statejTextField.getText().trim();
        String zipcode = this.zipcodejTextField.getText().trim();
        String ssnno = this.ssnnumberjTextField.getText().trim();
        String employeeids = this.employeeidjTextField.getText().trim();
        int zip;
        Long phoneno,ssno;
        Employee employee = system.getEmployeeDirectory().createEmployee(employeeName);
        Role role = (Role) rolejComboBox.getSelectedItem();
       
        if(username.isEmpty() || password.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || sex.isEmpty()
            || dob.isEmpty() || mailid.isEmpty() || phone.isEmpty()|| employeeids.isEmpty() 
            || address.isEmpty() || city.isEmpty() || state.isEmpty() || zipcode.isEmpty() || ssnno.isEmpty()
            || employee==null || role==null){
            JOptionPane.showMessageDialog(this, "Some Data in Fields is Missing", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        

        try{
            zip=Integer.parseInt(zipcode);
            ssno=Long.valueOf(ssnno);
            phoneno=Long.valueOf(phone);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Phone, SSN Number and Zip Code Must be a Positive Number.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!checkMail(mailid)){
            JOptionPane.showMessageDialog(this, "Check Your Email ID.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (phone.length()<10 || phone.length()>10 ) {
            JOptionPane.showMessageDialog(this, "Phone Number Should be 10 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (ssnno.length()<10 ) {
            JOptionPane.showMessageDialog(this, "SSno Should be 10 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (ssnno.length()>10 ) {
            JOptionPane.showMessageDialog(this, "SSno Should be Less Than 10 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (zipcode.length()!=5 ) {
            JOptionPane.showMessageDialog(this, "Zip Code Should be 5 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(username.length()<=4) {
            JOptionPane.showMessageDialog(this, "Username should be Five and More Length", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()>120) {
            JOptionPane.showMessageDialog(this, "Username should be less than 120 length", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(password.length()<=7) {
            JOptionPane.showMessageDialog(this, "Your Password length should be more than 8 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()>120) {
            JOptionPane.showMessageDialog(this, "Your Password length should be less than 120 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean unique=system.checkIfUserIsUnique(username);
        
        Organization inOrganization=null;
        //checking if username is taken
        if(unique){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                unique=organization1.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                if(!unique){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!unique){
            JOptionPane.showMessageDialog(this, "Username Already Taken", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniqueEmployeeid=system.checkIfEmployeeIdIsUnique(employeeids);
        
        if(uniqueEmployeeid){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniqueEmployeeid=organization1.getUserAccountDirectory().checkIfEmployeeIdsIsUnique(employeeids);
                if(!uniqueEmployeeid){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniqueEmployeeid){
            JOptionPane.showMessageDialog(this, "Employee ID Already Exists", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniquephone=system.checkIfPhoneIsUnique(phoneno);
        if(uniquephone){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniquephone=organization1.getUserAccountDirectory().checkIfPhonenoIsUnique(phoneno);
                if(!uniquephone){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniquephone){
            JOptionPane.showMessageDialog(this, "Phone Number Should be Unique", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniqueSSn=system.checkIfSSnIsUnique(ssno);
        if(uniqueSSn){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniqueSSn=organization1.getUserAccountDirectory().checkIfSSnoIsUnique(ssno);
                if(!uniqueSSn){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniqueSSn){
            JOptionPane.showMessageDialog(this, "SSN Should be Unique", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniqueEmail=system.checkIfEmailIsUnique(mailid);
        if(uniqueEmail){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniqueEmail=organization1.getUserAccountDirectory().checkIfEmailIDIsUnique(mailid);
                if(!uniqueEmail){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniqueEmail){
            JOptionPane.showMessageDialog(this, "Email Id Should be Unique", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        UserAccount newuser=system.getUserAccountDirectory().createUserAccount(username, password, employee, role, firstname, lastname, dob, sex, address, city, state, zip, phoneno, mailid, ssno, employeeids);
        if(newuser.toString()!=null)
        {
            JOptionPane.showMessageDialog(null, newuser.toFullname()+" Added Successfully.");
        }
        else{
            JOptionPane.showMessageDialog(null, "Couuld not Add User.");
            return;
        }
        dB4OModel.storeSystem(system);
        displayOrganizationUserAccount();
    }                                          

    private void delUserjButtonActionPerformed(java.awt.event.ActionEvent evt) { 
    }//GEN-LAST:event_saveEnterprisejButtonActionPerformed

    private void updateEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEnterprisejButtonActionPerformed
        int selectedRow = enterprisessjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select User or Add.");
            this.usernamejTextField.setText("");
            passwordjPasswordField.setText("");
            this.firstnamejTextField.setText("");
            lastnamejTextField.setText("");
            sexjComboBox.setSelectedIndex(0);
            this.emailIdjTextField.setText("");
            this.phonejTextField.setText("");
            this.addressjTextField.setText("");
            cityjTextField.setText("");
            this.zipcodejTextField.setText("");
            this.statejTextField.setText("");
            this.ssnnumberjTextField.setText("");
            this.employeeidjTextField.setText("");
            this.rolejComboBox.setSelectedIndex(0);
            this.employeeNamejTextField.setText("");
            this.newEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            saveEnterprisejButton.setVisible(true);
            return;
        }

        //Update Details
        String employeeName=this.employeeNamejTextField.getText();
        String username = this.usernamejTextField.getText().trim();
        char[] passwordRaw = this.passwordjPasswordField.getPassword();
        String password = String.valueOf(passwordRaw);
        String firstname = firstnamejTextField.getText().trim();
        String lastname = lastnamejTextField.getText().trim();
        String sex = sexjComboBox.getSelectedItem().toString().trim();
        String mailid = this.emailIdjTextField.getText().trim();
        String phone = this.phonejTextField.getText().trim();
        String address = this.addressjTextField.getText().trim();
        String city = this.cityjTextField.getText().trim();
        String state = this.statejTextField.getText().trim();
        String zipcode = this.zipcodejTextField.getText().trim();
        String ssnno = this.ssnnumberjTextField.getText().trim();
        String employeeids = this.employeeidjTextField.getText().trim();
        int zip;
        Long phoneno,ssno;
        Employee employee = system.getEmployeeDirectory().createEmployee(employeeName);
        Role role = (Role) rolejComboBox.getSelectedItem();
       
        if(username.isEmpty() || password.isEmpty() || firstname.isEmpty() || lastname.isEmpty() || sex.isEmpty()
            || mailid.isEmpty() || phone.isEmpty()|| employeeids.isEmpty() 
            || address.isEmpty() || city.isEmpty() || state.isEmpty() || zipcode.isEmpty() || ssnno.isEmpty()
            || employee==null || role==null){
            JOptionPane.showMessageDialog(this, "Some Data in Fields is Missing", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        

        try{
            zip=Integer.parseInt(zipcode);
            ssno=Long.valueOf(ssnno);
            phoneno=Long.valueOf(phone);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Phone, SSN Number and Zip Code Must be a Positive Number.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(!checkMail(mailid)){
            JOptionPane.showMessageDialog(this, "Check Your Email ID.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (phone.length()<10 || phone.length()>10 ) {
            JOptionPane.showMessageDialog(this, "Phone Number Should be 10 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (ssnno.length()<10 ) {
            JOptionPane.showMessageDialog(this, "SSno Should be 10 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (ssnno.length()>10 ) {
            JOptionPane.showMessageDialog(this, "SSno Should be Less Than 10 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if (zipcode.length()!=5 ) {
            JOptionPane.showMessageDialog(this, "Zip Code Should be 5 digits.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(username.length()<=4) {
            JOptionPane.showMessageDialog(this, "Username should be Five and More Length", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(username.length()>120) {
            JOptionPane.showMessageDialog(this, "Username should be less than 120 length", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(password.length()<=7) {
            JOptionPane.showMessageDialog(this, "Your Password length should be more than 8 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(password.length()>120) {
            JOptionPane.showMessageDialog(this, "Your Password length should be less than 120 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        UserAccount selUser = (UserAccount)enterprisessjTable.getValueAt(selectedRow, 0);
        boolean unique=system.checkIfUserIsUnique(username);
        Organization inOrganization=null;
        //checking if username is taken
        if(unique){
            //Step 1: Go inside each network and check each enterprise
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                unique=organization1.getUserAccountDirectory().checkIfUsernameIsUnique(username);
                if(!unique){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!unique && !selUser.getUsername().equalsIgnoreCase(username)){
            JOptionPane.showMessageDialog(this, "Username Already Taken", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniqueEmployeeid=system.checkIfEmployeeIdIsUnique(employeeids);
        
        if(uniqueEmployeeid){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniqueEmployeeid=organization1.getUserAccountDirectory().checkIfEmployeeIdsIsUnique(employeeids);
                if(!uniqueEmployeeid){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniqueEmployeeid && !selUser.getEmployeeid().equalsIgnoreCase(employeeids)){
            JOptionPane.showMessageDialog(this, "Employee ID Already Exists", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniqueEmail=system.checkIfEmailIsUnique(mailid);
        
        if(uniqueEmail){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniqueEmail=organization1.getUserAccountDirectory().checkIfEmailIDIsUnique(mailid);
                if(!uniqueEmail){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniqueEmail && !selUser.getEMailId().equalsIgnoreCase(mailid)){
            JOptionPane.showMessageDialog(this, "Email ID Already Exists", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        boolean uniquephone=system.checkIfPhoneIsUnique(phoneno);
        if(uniquephone){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniquephone=organization1.getUserAccountDirectory().checkIfPhonenoIsUnique(phoneno);
                if(!uniquephone){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniquephone && !String.valueOf(selUser.getPhone()).equals(String.valueOf(phoneno))){
            JOptionPane.showMessageDialog(this, "Phone Number Should be Unique", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean uniqueSSn=system.checkIfSSnIsUnique(ssno);
        if(uniqueSSn){
            //Step 1: Go inside each organization
            for(Organization organization1:system.getOrganizationDirectory().getOrganizationList()){
                uniqueSSn=organization1.getUserAccountDirectory().checkIfSSnoIsUnique(ssno);
                if(!uniqueSSn){
                    inOrganization=organization1;
                    break;
                }
            }
        }

        if(!uniqueSSn && !String.valueOf(selUser.getSsnno()).equals(String.valueOf(ssno))){
            JOptionPane.showMessageDialog(this, "SSN Should be Unique", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        selUser.setPassword(password);
        selUser.setRole(role);
        selUser.setUsername(username);
        selUser.setEmployee(employee);
        selUser.setFirstname(firstname);
        selUser.setLastname(lastname);
        selUser.setCity(city);
        selUser.setPhone(phoneno);
        selUser.setAddress(address);
        selUser.setZipcode(zip);
        selUser.setSsnno(ssno);
        selUser.setEmployeeid(employeeids);
        selUser.setState(state);
        selUser.setEMailId(mailid);
        JOptionPane.showMessageDialog(null, "User Updated Successfully.");
        dB4OModel.storeSystem(system);
        displayOrganizationUserAccount();
    }//GEN-LAST:event_updateEnterprisejButtonActionPerformed

    private void deleteEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteEnterprisejButtonActionPerformed
        int selectedRow = enterprisessjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select User or Add.");
            this.usernamejTextField.setText("");
            passwordjPasswordField.setText("");
            this.firstnamejTextField.setText("");
            lastnamejTextField.setText("");
            sexjComboBox.setSelectedIndex(0);
            this.emailIdjTextField.setText("");
            this.phonejTextField.setText("");
            this.addressjTextField.setText("");
            cityjTextField.setText("");
            this.zipcodejTextField.setText("");
            this.statejTextField.setText("");
            this.ssnnumberjTextField.setText("");
            this.employeeidjTextField.setText("");
            this.rolejComboBox.setSelectedIndex(0);
            this.employeeNamejTextField.setText("");
            this.newEnterprisejButton.setVisible(false);
            deleteEnterprisejButton.setVisible(false);
            updateEnterprisejButton.setVisible(false);
            saveEnterprisejButton.setVisible(true);
            return;
        }
        UserAccount selUser = (UserAccount)enterprisessjTable.getValueAt(selectedRow, 0);
        system.getUserAccountDirectory().getUserAccountList().remove(selUser);
        JOptionPane.showMessageDialog(null, "User Deleted.");
        dB4OModel.storeSystem(system);
        displayOrganizationUserAccount();
    }//GEN-LAST:event_deleteEnterprisejButtonActionPerformed

    private void newEnterprisejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEnterprisejButtonActionPerformed
        this.usernamejTextField.setText("");
        passwordjPasswordField.setText("");
        this.firstnamejTextField.setText("");
        lastnamejTextField.setText("");
        sexjComboBox.setSelectedIndex(0);
        this.emailIdjTextField.setText("");
        this.phonejTextField.setText("");
        this.addressjTextField.setText("");
        cityjTextField.setText("");
        this.zipcodejTextField.setText("");
        this.statejTextField.setText("");
        this.ssnnumberjTextField.setText("");
        this.employeeidjTextField.setText("");
        this.rolejComboBox.setSelectedIndex(0);
        this.employeeNamejTextField.setText("");
        this.newEnterprisejButton.setVisible(false);
        deleteEnterprisejButton.setVisible(false);
        updateEnterprisejButton.setVisible(false);
        saveEnterprisejButton.setVisible(true);
    }//GEN-LAST:event_newEnterprisejButtonActionPerformed
    
    
    public void PopRolesComboBox(){
        this.rolejComboBox.removeAllItems();
        rolejComboBox.addItem(new ProjectManagerLogin());
        rolejComboBox.addItem(new EmployeeLogin());
    }

    
    public void displayOrganizationUserAccount() {

        DefaultTableModel model = (DefaultTableModel) enterprisessjTable.getModel();

        model.setRowCount(0);
        for (UserAccount ua : system.getUserAccountDirectory().getUserAccountList()) {
            if(ua.getRole() instanceof EmployeeLogin || ua.getRole() instanceof ProjectManagerLogin){
                Object row[] = new Object[4];
                row[0] = ua;
                row[1] = ua.getRole();
                row[2] = ua.getEmployee();
                row[3] = ua.getEmployeeid();
                model.addRow(row);
            }
        }
    }
    
    static boolean checkMail(String emailid) {
      String mailidregex = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
      return emailid.matches(mailidregex);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressjTextField;
    private javax.swing.JTextField cityjTextField;
    private javax.swing.JButton deleteEnterprisejButton;
    private javax.swing.JTextField emailIdjTextField;
    private javax.swing.JTextField employeeNamejTextField;
    private javax.swing.JTextField employeeidjTextField;
    private javax.swing.JTable enterprisessjTable;
    private javax.swing.JTextField firstnamejTextField;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastnamejTextField;
    private javax.swing.JLabel loggedmhwjLabel;
    private javax.swing.JLabel networknamejLabel;
    private javax.swing.JButton newEnterprisejButton;
    private javax.swing.JPanel newUserjPanel;
    private javax.swing.JPasswordField passwordjPasswordField;
    private javax.swing.JTextField phonejTextField;
    private javax.swing.JComboBox rolejComboBox;
    private javax.swing.JButton saveEnterprisejButton;
    private javax.swing.JComboBox<String> sexjComboBox;
    private javax.swing.JTextField ssnnumberjTextField;
    private javax.swing.JTextField statejTextField;
    private javax.swing.JButton updateEnterprisejButton;
    private javax.swing.JTextField usernamejTextField;
    private javax.swing.JComboBox<String> yearjComboBox;
    private javax.swing.JTextField zipcodejTextField;
    // End of variables declaration//GEN-END:variables
}
