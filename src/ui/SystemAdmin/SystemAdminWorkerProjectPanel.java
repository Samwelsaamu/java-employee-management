/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.SystemAdmin;

import business.DB4OUtil.DB4OUtil;
import business.Organization.Organization;
import business.Organization.OrganizationDirectory;
import business.Employee.Employee;
import business.EmployeeManagement;
import business.Organization.ProjectOrganization;
import business.Projects.Projects;
import business.Role.Role;
import business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.time.LocalDate;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Saamu
 */
@SuppressWarnings("unchecked")
public class SystemAdminWorkerProjectPanel extends javax.swing.JPanel {

    /**
     * Creates new form MentalHealthWorkerjPanel
     */
    private EmployeeManagement system;
    private OrganizationDirectory directory;
    private JPanel container,logincontainerJPanel;
    private UserAccount user;
    private DB4OUtil dB4OUtil = DB4OUtil.getInstance();
    private DefaultComboBoxModel days=new DefaultComboBoxModel();
    private DefaultComboBoxModel days1=new DefaultComboBoxModel();
    public SystemAdminWorkerProjectPanel(JPanel logincontainerJPanel,JPanel container,OrganizationDirectory directory, UserAccount user, EmployeeManagement system) {
        initComponents();
        this.system=system;
        this.container=container;
        this.logincontainerJPanel=logincontainerJPanel;
        this.directory=directory;
        this.user=user;
        this.loggedmhwjLabel.setText("Hi, "+user.getEmployee());
        
        projectNamejTextField.setText("");
        newProjectjButton.setVisible(false);
        updateProjectjButton.setVisible(false);
        deleteProjectjButton.setVisible(false);
        saveProjectjButton.setVisible(true);
        DisplayProjects();
        
        yearjComboBox.removeAll();
        yearjComboBox1.removeAll();
        LocalDate nowDate=LocalDate.now();
        int year=nowDate.getYear();
        int startYear=1940;
        int endYear=2060;
        for(int i=year;i>=startYear;i--){
            yearjComboBox.addItem(String.valueOf(i));
        }
        int year1=nowDate.getYear();
        for(int i=year1;i<=endYear;i++){
            yearjComboBox1.addItem(String.valueOf(i));
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loggedmhwjLabel = new javax.swing.JLabel();
        networknamejLabel = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        projectNamejTextField = new javax.swing.JTextField();
        budgetjTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        saveProjectjButton = new javax.swing.JButton();
        newProjectjButton = new javax.swing.JButton();
        deleteProjectjButton = new javax.swing.JButton();
        updateProjectjButton = new javax.swing.JButton();
        yearjComboBox = new javax.swing.JComboBox<>();
        monthjComboBox = new javax.swing.JComboBox<>();
        dayjComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        dayjComboBox1 = new javax.swing.JComboBox<>();
        monthjComboBox1 = new javax.swing.JComboBox<>();
        yearjComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        skillsjTextArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionjTextArea = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectsjTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(204, 204, 255));

        jPanel1.setBackground(new java.awt.Color(237, 226, 242));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        loggedmhwjLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        loggedmhwjLabel.setText("Logged Username");
        loggedmhwjLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        networknamejLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        networknamejLabel.setText("Manage Project Resources");
        networknamejLabel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jButton4.setBackground(new java.awt.Color(175, 180, 209));
        jButton4.setText("<< Back");
        jButton4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 153, 153)));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(117, 117, 117))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loggedmhwjLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(networknamejLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Create / Update Projects", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Project Name");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel4.setText("Estimated Budget");

        saveProjectjButton.setBackground(new java.awt.Color(175, 180, 209));
        saveProjectjButton.setText("Save");
        saveProjectjButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        saveProjectjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveProjectjButtonActionPerformed(evt);
            }
        });

        newProjectjButton.setBackground(new java.awt.Color(175, 180, 209));
        newProjectjButton.setText("New");
        newProjectjButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        newProjectjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newProjectjButtonActionPerformed(evt);
            }
        });

        deleteProjectjButton.setBackground(new java.awt.Color(175, 180, 209));
        deleteProjectjButton.setText("Delete");
        deleteProjectjButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        deleteProjectjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProjectjButtonActionPerformed(evt);
            }
        });

        updateProjectjButton.setBackground(new java.awt.Color(175, 180, 209));
        updateProjectjButton.setText("Update");
        updateProjectjButton.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        updateProjectjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProjectjButtonActionPerformed(evt);
            }
        });

        yearjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearjComboBoxActionPerformed(evt);
            }
        });

        monthjComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        monthjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthjComboBoxActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel7.setText("Start Date");

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel8.setText("End Date");

        monthjComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        monthjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthjComboBox1ActionPerformed(evt);
            }
        });

        yearjComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yearjComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel5.setText("Skills");

        skillsjTextArea.setColumns(20);
        skillsjTextArea.setRows(5);
        jScrollPane2.setViewportView(skillsjTextArea);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel6.setText("Description");

        descriptionjTextArea.setColumns(20);
        descriptionjTextArea.setRows(5);
        jScrollPane3.setViewportView(descriptionjTextArea);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(budgetjTextField))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(saveProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(projectNamejTextField))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yearjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(monthjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dayjComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(yearjComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(monthjComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dayjComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectNamejTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(budgetjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(yearjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(monthjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dayjComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(yearjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(monthjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(dayjComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(deleteProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(saveProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newProjectjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(237, 226, 242));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Projects", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP));

        projectsjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Project", "Manager", "Budget", "Start", "End", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        projectsjTable.setGridColor(java.awt.SystemColor.window);
        projectsjTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                projectsjTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(projectsjTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void saveProjectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveProjectjButtonActionPerformed
        String budget = this.budgetjTextField.getText();
        String projectname = projectNamejTextField.getText();
        String skills = skillsjTextArea.getText();
        String description =descriptionjTextArea.getText();
        
        int year=Integer.parseInt(yearjComboBox.getSelectedItem().toString());
        int month=Integer.parseInt(monthjComboBox.getSelectedItem().toString());
        int day=Integer.parseInt(monthjComboBox.getSelectedItem().toString());
        
        int year1=Integer.parseInt(yearjComboBox1.getSelectedItem().toString());
        int month1=Integer.parseInt(monthjComboBox1.getSelectedItem().toString());
        int day1=Integer.parseInt(monthjComboBox1.getSelectedItem().toString());
        LocalDate startSelDate,endSelDate;
        String startDate,endDate;
        double budgetCost;
        
        try{
            startSelDate=LocalDate.of(year, month, day);
            endSelDate=LocalDate.of(year1, month1, day1);
            startDate=startSelDate.toString();
            endDate=endSelDate.toString();
            budgetCost=Double.parseDouble(budget);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Invalid Date.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(projectname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Project Name is Required", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(projectname.length()<=5) {
            JOptionPane.showMessageDialog(this, "Project Name should be more than five characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(projectname.length()>120) {
            JOptionPane.showMessageDialog(this, "Project Name should be less than 120 characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(skills.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Provide Skills", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(skills.length()<=9) {
            JOptionPane.showMessageDialog(this, "Skills Should be more than 10 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(skills.length()>200) {
            JOptionPane.showMessageDialog(this, "Skills should be less than 200", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(description.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Provide Project Description", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(description.length()<=9) {
            JOptionPane.showMessageDialog(this, "Description Should be more than 10 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(description.length()>120) {
            JOptionPane.showMessageDialog(this, "Description should be less than 120", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean unique=system.getProjectsDirectory().checkIfProjectIsUnique(projectname);
        
        if(!unique){
            JOptionPane.showMessageDialog(this, "This Project Name is Already Taken", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        system.getProjectsDirectory().createProject(projectname, description, null, budgetCost, skills, startDate, endDate,"New Project");
        JOptionPane.showMessageDialog(null, "New Project Added");
        dB4OUtil.storeSystem(system);
        DisplayProjects();
    }//GEN-LAST:event_saveProjectjButtonActionPerformed

    private void newProjectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectjButtonActionPerformed
        projectNamejTextField.setText("");
        budgetjTextField.setText("");
        skillsjTextArea.setText("");
        descriptionjTextArea.setText("");
        newProjectjButton.setVisible(false);
        updateProjectjButton.setVisible(false);
        deleteProjectjButton.setVisible(false);
        saveProjectjButton.setVisible(true);
    }//GEN-LAST:event_newProjectjButtonActionPerformed

    private void deleteProjectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProjectjButtonActionPerformed
        int selectedRow = projectsjTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select Project to Delete.");
            projectNamejTextField.setText("");
            budgetjTextField.setText("");
            skillsjTextArea.setText("");
            descriptionjTextArea.setText("");
            newProjectjButton.setVisible(false);
            updateProjectjButton.setVisible(false);
            deleteProjectjButton.setVisible(false);
            return;
        }
        Projects project = (Projects)projectsjTable.getValueAt(selectedRow, 0);
        system.getProjectsDirectory().getProjectsList().remove(project);
        JOptionPane.showMessageDialog(null, "Project Deleted");
        dB4OUtil.storeSystem(system);
        DisplayProjects();
    }//GEN-LAST:event_deleteProjectjButtonActionPerformed

    private void updateProjectjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProjectjButtonActionPerformed
        int selectedRow = projectsjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Select Project to Update");
            projectNamejTextField.setText("");
            budgetjTextField.setText("");
            skillsjTextArea.setText("");
            descriptionjTextArea.setText("");
            newProjectjButton.setVisible(false);
            updateProjectjButton.setVisible(false);
            deleteProjectjButton.setVisible(false);
            return;
        }
        
        String budget = this.budgetjTextField.getText();
        String projectname = projectNamejTextField.getText();
        String skills = skillsjTextArea.getText();
        String description =descriptionjTextArea.getText();
        
        int year=Integer.parseInt(yearjComboBox.getSelectedItem().toString());
        int month=Integer.parseInt(monthjComboBox.getSelectedItem().toString());
        int day=Integer.parseInt(monthjComboBox.getSelectedItem().toString());
        
        int year1=Integer.parseInt(yearjComboBox1.getSelectedItem().toString());
        int month1=Integer.parseInt(monthjComboBox1.getSelectedItem().toString());
        int day1=Integer.parseInt(monthjComboBox1.getSelectedItem().toString());
        LocalDate startSelDate,endSelDate;
        String startDate,endDate;
        double budgetCost;
        
        try{
            startSelDate=LocalDate.of(year, month, day);
            endSelDate=LocalDate.of(year1, month1, day1);
            startDate=startSelDate.toString();
            endDate=endSelDate.toString();
            budgetCost=Double.parseDouble(budget);
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Invalid Date.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(projectname.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Project Name is Required", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(projectname.length()<=5) {
            JOptionPane.showMessageDialog(this, "Project Name should be more than five characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(projectname.length()>120) {
            JOptionPane.showMessageDialog(this, "Project Name should be less than 120 characters ", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if(skills.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Provide Skills", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(skills.length()<=9) {
            JOptionPane.showMessageDialog(this, "Skills Should be more than 10 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(skills.length()>200) {
            JOptionPane.showMessageDialog(this, "Skills should be less than 200", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(description.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Provide Project Description", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(description.length()<=9) {
            JOptionPane.showMessageDialog(this, "Description Should be more than 10 characters", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(description.length()>120) {
            JOptionPane.showMessageDialog(this, "Description should be less than 120", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        boolean unique=system.getProjectsDirectory().checkIfProjectIsUnique(projectname);
        Projects project = (Projects)projectsjTable.getValueAt(selectedRow, 0);
        if(!unique && !project.getName().equalsIgnoreCase(projectname)){
            JOptionPane.showMessageDialog(this, "This Project Name is Already Taken", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        project.setName(projectname);
        project.setDescription(description);
        project.setBudget(budgetCost);
        project.setSkills(skills);
        project.setStartDate(startDate);
        project.setEndDate(endDate);
        JOptionPane.showMessageDialog(null, "Project Updated");
        dB4OUtil.storeSystem(system);
        DisplayProjects();
    }//GEN-LAST:event_updateProjectjButtonActionPerformed

    private void projectsjTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_projectsjTableMouseClicked
        int selectedRow = projectsjTable.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select Project");
            projectNamejTextField.setText("");
            budgetjTextField.setText("");
            skillsjTextArea.setText("");
            descriptionjTextArea.setText("");
            newProjectjButton.setVisible(false);
            deleteProjectjButton.setVisible(false);
            updateProjectjButton.setVisible(false);
            saveProjectjButton.setVisible(true);
            return;
        }
        
        Projects project = (Projects)projectsjTable.getValueAt(selectedRow, 0);
        projectNamejTextField.setText(project.getName());
        budgetjTextField.setText(String.valueOf(project.getBudget()));
        skillsjTextArea.setText(project.getSkills());
        descriptionjTextArea.setText(project.getDescription());
        newProjectjButton.setVisible(true);
        updateProjectjButton.setVisible(true);
        deleteProjectjButton.setVisible(true);
        saveProjectjButton.setVisible(false);
    }//GEN-LAST:event_projectsjTableMouseClicked

    private void yearjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearjComboBoxActionPerformed
        calcDate();
    }//GEN-LAST:event_yearjComboBoxActionPerformed

    private void monthjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthjComboBoxActionPerformed
        calcDate();
    }//GEN-LAST:event_monthjComboBoxActionPerformed

    private void monthjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthjComboBox1ActionPerformed
        calcDate1();
    }//GEN-LAST:event_monthjComboBox1ActionPerformed

    private void yearjComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yearjComboBox1ActionPerformed
        calcDate1();
    }//GEN-LAST:event_yearjComboBox1ActionPerformed

    private void DisplayProjects() {
        DefaultTableModel model = (DefaultTableModel) projectsjTable.getModel();
        
        model.setRowCount(0);
        for (Projects project : system.getProjectsDirectory().getProjectsList()) {
            Object[] row = new Object[6];
            row[0] = project;
            row[1] = project.getProjectManager();
            row[2] = String.valueOf(project.getBudget());
            row[3] = project.getStartDate();
            row[4] = project.getEndDate();
            row[5] = project.getStatus();
            model.addRow(row);
        }
    }
    
    private void calcDate(){
        int year=Integer.parseInt(yearjComboBox.getSelectedItem().toString());
        int month=Integer.parseInt(monthjComboBox.getSelectedItem().toString());
        LocalDate selDate=LocalDate.of(year, 01, 01);
        
        boolean leap=selDate.isLeapYear();
        days.removeAllElements();
        dayjComboBox.setModel(days);
//        dayjComboBox.removeAll();
        if(leap){
            if(month==2){
                for(int i=1;i<=29;i++){
                    days.addElement(String.valueOf(i));
                }
            }
            else if(month==4 || month==6 || month==9 || month==11){
                for(int i=1;i<=30;i++){
                    days.addElement(String.valueOf(i));
                }
            }
            else{
                for(int i=1;i<=31;i++){
                    days.addElement(String.valueOf(i));
                }
            }
        }
        else{
            if(month==2){
                for(int i=1;i<=28;i++){
                    days.addElement(String.valueOf(i));
                }
            }
            else if(month==4 || month==6 || month==9 || month==11){
                for(int i=1;i<=30;i++){
                    days.addElement(String.valueOf(i));
                }
            }
            else{
                for(int i=1;i<=31;i++){
                    days.addElement(String.valueOf(i));
                }
            }
        }
    }
    
    private void calcDate1(){
        int year=Integer.parseInt(yearjComboBox1.getSelectedItem().toString());
        int month=Integer.parseInt(monthjComboBox1.getSelectedItem().toString());
        LocalDate selDate=LocalDate.of(year, 01, 01);
        
        boolean leap=selDate.isLeapYear();
        days1.removeAllElements();
        dayjComboBox1.setModel(days1);
//        dayjComboBox.removeAll();
        if(leap){
            if(month==2){
                for(int i=1;i<=29;i++){
                    days1.addElement(String.valueOf(i));
                }
            }
            else if(month==4 || month==6 || month==9 || month==11){
                for(int i=1;i<=30;i++){
                    days1.addElement(String.valueOf(i));
                }
            }
            else{
                for(int i=1;i<=31;i++){
                    days1.addElement(String.valueOf(i));
                }
            }
        }
        else{
            if(month==2){
                for(int i=1;i<=28;i++){
                    days1.addElement(String.valueOf(i));
                }
            }
            else if(month==4 || month==6 || month==9 || month==11){
                for(int i=1;i<=30;i++){
                    days1.addElement(String.valueOf(i));
                }
            }
            else{
                for(int i=1;i<=31;i++){
                    days1.addElement(String.valueOf(i));
                }
            }
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField budgetjTextField;
    private javax.swing.JComboBox<String> dayjComboBox;
    private javax.swing.JComboBox<String> dayjComboBox1;
    private javax.swing.JButton deleteProjectjButton;
    private javax.swing.JTextArea descriptionjTextArea;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel loggedmhwjLabel;
    private javax.swing.JComboBox<String> monthjComboBox;
    private javax.swing.JComboBox<String> monthjComboBox1;
    private javax.swing.JLabel networknamejLabel;
    private javax.swing.JButton newProjectjButton;
    private javax.swing.JTextField projectNamejTextField;
    private javax.swing.JTable projectsjTable;
    private javax.swing.JButton saveProjectjButton;
    private javax.swing.JTextArea skillsjTextArea;
    private javax.swing.JButton updateProjectjButton;
    private javax.swing.JComboBox<String> yearjComboBox;
    private javax.swing.JComboBox<String> yearjComboBox1;
    // End of variables declaration//GEN-END:variables
}
